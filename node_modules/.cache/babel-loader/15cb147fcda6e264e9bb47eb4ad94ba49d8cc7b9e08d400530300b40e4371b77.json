{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer, useCallback } from 'react';\nconst initialState = {\n  loading: false,\n  error: null,\n  data: null,\n  extra: null,\n  identifier: null\n};\nconst httpReducer = (curHttpState, action) => {\n  switch (action.type) {\n    case 'SEND':\n      return {\n        loading: true,\n        error: null,\n        data: null,\n        extra: null,\n        identifier: action.identifier\n      };\n    case 'RESPONSE':\n      return {\n        ...curHttpState,\n        loading: false,\n        data: action.responseData,\n        extra: action.extra\n      };\n    case 'ERROR':\n      return {\n        loading: false,\n        error: action.errorMessage\n      };\n    case 'CLEAR':\n      return initialState;\n    default:\n      throw new Error('Should not be reached!');\n  }\n};\nconst useHttp = () => {\n  _s();\n  const [httpState, dispatchHttp] = useReducer(httpReducer, initialState);\n  const clear = useCallback(() => dispatchHttp({\n    type: 'CLEAR'\n  }), []);\n  const sendRequest = useCallback((url, method, body, reqExtra, reqIdentifer) => {\n    dispatchHttp({\n      type: 'SEND',\n      identifier: reqIdentifer\n    });\n    fetch(url, {\n      method: method,\n      body: body,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      dispatchHttp({\n        type: 'RESPONSE',\n        responseData: responseData,\n        extra: reqExtra\n      });\n    }).catch(error => {\n      dispatchHttp({\n        type: 'ERROR',\n        errorMessage: 'Something went wrong!'\n      });\n    });\n  }, []);\n  return {\n    isLoading: httpState.loading,\n    data: httpState.data,\n    error: httpState.error,\n    sendRequest: sendRequest,\n    reqExtra: httpState.extra,\n    reqIdentifer: httpState.identifier,\n    clear: clear\n  };\n};\n_s(useHttp, \"cBmdawOWcYcBjlVyrFzUiHK+Ai8=\");\nexport default useHttp;","map":{"version":3,"names":["useReducer","useCallback","initialState","loading","error","data","extra","identifier","httpReducer","curHttpState","action","type","responseData","errorMessage","Error","useHttp","httpState","dispatchHttp","clear","sendRequest","url","method","body","reqExtra","reqIdentifer","fetch","headers","then","response","json","catch","isLoading"],"sources":["D:/WorkSpace/01_WS_React/React/src/hooks/http.js"],"sourcesContent":["import { useReducer, useCallback } from 'react';\n\nconst initialState = {\n  loading: false,\n  error: null,\n  data: null,\n  extra: null,\n  identifier: null\n};\n\nconst httpReducer = (curHttpState, action) => {\n  switch (action.type) {\n    case 'SEND':\n      return {\n        loading: true,\n        error: null,\n        data: null,\n        extra: null,\n        identifier: action.identifier\n      };\n    case 'RESPONSE':\n      return {\n        ...curHttpState,\n        loading: false,\n        data: action.responseData,\n        extra: action.extra\n      };\n    case 'ERROR':\n      return { loading: false, error: action.errorMessage };\n    case 'CLEAR':\n      return initialState;\n    default:\n      throw new Error('Should not be reached!');\n  }\n};\n\nconst useHttp = () => {\n  const [httpState, dispatchHttp] = useReducer(httpReducer, initialState);\n\n  const clear = useCallback(() => dispatchHttp({ type: 'CLEAR' }), []);\n\n  const sendRequest = useCallback(\n    (url, method, body, reqExtra, reqIdentifer) => {\n      dispatchHttp({ type: 'SEND', identifier: reqIdentifer });\n      fetch(url, {\n        method: method,\n        body: body,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(response => {\n          return response.json();\n        })\n        .then(responseData => {\n          dispatchHttp({\n            type: 'RESPONSE',\n            responseData: responseData,\n            extra: reqExtra\n          });\n        })\n        .catch(error => {\n          dispatchHttp({\n            type: 'ERROR',\n            errorMessage: 'Something went wrong!'\n          });\n        });\n    },\n    []\n  );\n\n  return {\n    isLoading: httpState.loading,\n    data: httpState.data,\n    error: httpState.error,\n    sendRequest: sendRequest,\n    reqExtra: httpState.extra,\n    reqIdentifer: httpState.identifier,\n    clear: clear\n  };\n};\n\nexport default useHttp;\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAE/C,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,WAAW,GAAG,CAACC,YAAY,EAAEC,MAAM,KAAK;EAC5C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,MAAM;MACT,OAAO;QACLR,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,IAAI;QACXC,UAAU,EAAEG,MAAM,CAACH;MACrB,CAAC;IACH,KAAK,UAAU;MACb,OAAO;QACL,GAAGE,YAAY;QACfN,OAAO,EAAE,KAAK;QACdE,IAAI,EAAEK,MAAM,CAACE,YAAY;QACzBN,KAAK,EAAEI,MAAM,CAACJ;MAChB,CAAC;IACH,KAAK,OAAO;MACV,OAAO;QAAEH,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEM,MAAM,CAACG;MAAa,CAAC;IACvD,KAAK,OAAO;MACV,OAAOX,YAAY;IACrB;MACE,MAAM,IAAIY,KAAK,CAAC,wBAAwB,CAAC;EAAC;AAEhD,CAAC;AAED,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,UAAU,CAACQ,WAAW,EAAEN,YAAY,CAAC;EAEvE,MAAMgB,KAAK,GAAGjB,WAAW,CAAC,MAAMgB,YAAY,CAAC;IAAEN,IAAI,EAAE;EAAQ,CAAC,CAAC,EAAE,EAAE,CAAC;EAEpE,MAAMQ,WAAW,GAAGlB,WAAW,CAC7B,CAACmB,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,KAAK;IAC7CP,YAAY,CAAC;MAAEN,IAAI,EAAE,MAAM;MAAEJ,UAAU,EAAEiB;IAAa,CAAC,CAAC;IACxDC,KAAK,CAACL,GAAG,EAAE;MACTC,MAAM,EAAEA,MAAM;MACdC,IAAI,EAAEA,IAAI;MACVI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAI;MAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;IACxB,CAAC,CAAC,CACDF,IAAI,CAACf,YAAY,IAAI;MACpBK,YAAY,CAAC;QACXN,IAAI,EAAE,UAAU;QAChBC,YAAY,EAAEA,YAAY;QAC1BN,KAAK,EAAEiB;MACT,CAAC,CAAC;IACJ,CAAC,CAAC,CACDO,KAAK,CAAC1B,KAAK,IAAI;MACda,YAAY,CAAC;QACXN,IAAI,EAAE,OAAO;QACbE,YAAY,EAAE;MAChB,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC,EACD,EAAE,CACH;EAED,OAAO;IACLkB,SAAS,EAAEf,SAAS,CAACb,OAAO;IAC5BE,IAAI,EAAEW,SAAS,CAACX,IAAI;IACpBD,KAAK,EAAEY,SAAS,CAACZ,KAAK;IACtBe,WAAW,EAAEA,WAAW;IACxBI,QAAQ,EAAEP,SAAS,CAACV,KAAK;IACzBkB,YAAY,EAAER,SAAS,CAACT,UAAU;IAClCW,KAAK,EAAEA;EACT,CAAC;AACH,CAAC;AAAC,GA5CIH,OAAO;AA8Cb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}